apiVersion: argoproj.io/v1alpha1
kind: ArgoCD
metadata:
  name: openshift-gitops
  namespace: openshift-gitops
spec:
  applicationSet:
    resources:
      limits:
        cpu: "2"
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 512Mi
  controller:
    processors: {}
    resources:
      limits:
        cpu: "2"
        memory: 2Gi
      requests:
        cpu: 250m
        memory: 1Gi
    sharding: {}
  dex:
    openShiftOAuth: true
    groups: 
    - expertise-edf
    - expertise-i3t-admin
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  grafana:
    enabled: false
    ingress:
      enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
    route:
      enabled: false
  ha:
    enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  initialSSHKnownHosts: {}
  prometheus:
    enabled: false
    ingress:
      enabled: false
    route:
      enabled: false
  rbac:
    policy: |
      p, role:expertise-edf-admin, applicationsets, *, */*, allow
      p, role:expertise-edf-admin, projects, *, */*, allow
      p, role:expertise-edf-admin, certificates, *, */*, allow
      p, role:expertise-edf-admin, applications, *, */*, allow
      p, role:expertise-edf-admin, clusters, *, */*, allow
      p, role:expertise-edf-admin, repositories, *, */*, allow
      p, role:expertise-edf-admin, logs, get, *, allow
      p, role:expertise-edf-admin, exec, create, */*, allow
      p, role:expertise-i3t-admin, applicationsets, *, */*, allow
      p, role:expertise-i3t-admin, projects, *, */*, allow
      p, role:expertise-i3t-admin, certificates, *, */*, allow
      p, role:expertise-i3t-admin, applications, *, */*, allow
      p, role:expertise-i3t-admin, clusters, *, */*, allow
      p, role:expertise-i3t-admin, repositories, *, */*, allow
      p, role:expertise-i3t-admin, logs, get, *, allow
      p, role:expertise-i3t-admin, exec, create, */*, allow
      g, system:cluster-admins, role:admin
      g, cluster-admins, role:admin
      g, expertise-edf, role:expertise-edf-admin
      g, expertise-i3t, role:expertise-i3t-admin
    scopes: '[groups]'
  redis:
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  repo:
    resources:
      limits:
        cpu: "1"
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 256Mi
  resourceExclusions: |
    - apiGroups:
      - tekton.dev
      clusters:
      - '*'
      kinds:
      - TaskRun
      - PipelineRun
  server:
    autoscale:
      enabled: false
    grpc:
      ingress:
        enabled: false
    ingress:
      enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 125m
        memory: 128Mi
    route:
      enabled: true
    service:
      type: ""
  tls:
    ca: {}
